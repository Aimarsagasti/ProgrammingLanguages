package reflection2;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;

class Test {

		String s;
		
		public Test() {
			
			s = "Programming languages";
			
		}
		
		public void method1() {
			
			
		}

		public void method2(int n) {
			
			System.out.println("The value of n is: "+n);
			
		}

		public void method3() {
			
			System.out.println("Private method is invoked");
			
		}
		
		
}

public class main {
	
	public static void main(String[] args) throws NoSuchMethodException, SecurityException {
		
		Test t1 = new Test();
		
		Class cls = t1.getClass();
		
		System.out.println("The name of the class is: "+cls.getName());
		
		Constructor constructor = cls.getConstructor();
		
		System.out.println("The name of the constructor is: "+ constructor.getName());
		
		
		
		Method[] methods = cls.getMethods();
		
		for(int i = 0; i < methods.length; i++) {
			
			System.out.println("Method name: "+methods[i].getName());
			
			
		}
		
		
		System.out.println("Printing the results of method 1: ");
		
		Method methodCall1 = cls.getDeclaredMethod("method2");
		
		methodCall1.invoke(t1);
		
		Method methodCall2 = cls.getDeclaredMethod("method2", int.class);
		methodCall2.invoke(t1, 15);
		
		
	}
	
}
